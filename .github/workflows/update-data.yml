name: Aggiorna dati e esegui script

on:
  schedule:
    - cron: "0 * * * *"   # ogni ora (al minuto 0)
  workflow_dispatch:      # esecuzione manuale dal tab Actions

permissions:
  contents: write   # serve per fare commit del data.json

jobs:
  update-and-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup Python per lo script principale
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Installa dipendenze Python
        run: pip install -r requirements.txt

      # Esegui lo script Python principale PRIMA
      - name: Esegui script principale
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          RSS_URL: ${{ secrets.RSS_URL }}
          RSS_URL_1: ${{ secrets.RSS_URL_1 }}
          RSS_URL_2: ${{ secrets.RSS_URL_2 }}
          RSS_URL_3: ${{ secrets.RSS_URL_3 }}
        run: python main.py

      - name: Usa Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Aggiorna data.json da Notion DOPO
      - name: Esegui script Notion → data.json
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: node scripts/fetch_notion.js

      # Debug: mostra lo stato dei file prima del commit
      - name: Debug - Mostra stato file
        run: |
          echo "=== Stato file prima del commit ==="
          ls -la
          echo "=== Contenuto rejected_urls_cache.json ==="
          if [ -f "rejected_urls_cache.json" ]; then
            cat rejected_urls_cache.json
          else
            echo "File rejected_urls_cache.json NON TROVATO!"
          fi
          echo "=== Contenuto public/data.json ==="
          if [ -f "public/data.json" ]; then
            ls -la public/data.json
          else
            echo "File public/data.json NON TROVATO!"
          fi

      # Forza il tracking del file cache se esiste
      - name: Forza tracking file cache
        run: |
          if [ -f "rejected_urls_cache.json" ]; then
            git add rejected_urls_cache.json
            echo "✅ File cache aggiunto al tracking"
          else
            echo "⚠️ File cache non trovato"
          fi

      - name: Commit e push se ci sono cambiamenti
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: aggiorna public/data.json e cache"
          file_pattern: |
            public/data.json
            rejected_urls_cache.json
          commit_user_name: 'GitHub Action'
          commit_user_email: 'action@github.com'
          commit_options: '--no-verify'

      # Debug: verifica finale
      - name: Debug - Verifica finale
        run: |
          echo "=== Verifica finale ==="
          echo "File nel repository:"
          ls -la
          echo "Status Git:"
          git status
          echo "Ultimi commit:"
          git log --oneline -5
